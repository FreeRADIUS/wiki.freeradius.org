==Overview==

'''Extensible Authentication Protocol''', or '''EAP''', is a universal [[authentication]] framework frequently used in [[wireless LAN|wireless networks]] and [[Point-to-Point_Protocol|Point-to-Point connections]].  It is defined by RFC 3748. Although the EAP protocol is not limited to wireless LAN networks and can be used for wired LAN authentication, it is most often used in wireless LAN networks.  Recently, the [[Wi-Fi Protected Access|WPA]] and [[WPA2]] standard has officially adopted five EAP types as its official authentication mechanisms.  

EAP is an authentication framework, not a specific authentication mechanism. The EAP provides some common functions and a negotiation of the desired authentication mechanism. Such mechanisms are called EAP methods and there are currently about 40 different methods. Methods defined in IETF RFCs include EAP-MD5, EAP-OTP, EAP-GTC, EAP-TLS, [[EAP#EAP-IKEv2|EAP-IKEv2]], EAP-SIM, and EAP-AKA, and in addition a number of vendor specific methods and new proposals exist. Commonly used modern methods capable of operating in wireless networks include EAP-TLS, EAP-SIM, EAP-AKA, PEAP, LEAP and EAP-TTLS.  Requirements for EAP methods used in wireless LAN authentication are described in RFC 4017. 

When EAP is invoked by an [[802.1X]] enabled [[NAS]] (Network Access Server) device such as an [[802.11]] a/b/g Wireless Access Point, modern EAP methods can provide a secure authentication mechanism and negotiate a secure PMK (Pair-wise Master Key) between the client and NAS.  The PMK can then be used for the wireless encryption session which uses [[TKIP]] or [[Advanced Encryption Standard|AES]] encryption. 

==FreeRADIUS Support==

[[FreeRADIUS]] currently supports the following sub-types of [[EAP]]
* Cisco LEAP
* EAP-MD5
* EAP-PEAP
* EAP-SIM
* EAP-TLS
* EAP-TTLS

==EAP Sub-Types==

=== LEAP ===

The Lightweight Extensible Authentication Protocol ([[LEAP]]) is a proprietary EAP method developed by Cisco Systems.

There is no native support for LEAP in any Windows operating system but is supported by third party [[supplicants]]. The protocol is known to be vulnerable to dictionary attacks however Cisco still maintains that LEAP can be secure if sufficiently complex passwords are used. Newer protocols like [[EAP#EAP-TTLS]] and [[EAP#PEAP]] do not have this problem and can operate on Cisco and non-Cisco Access Points.

=== EAP-TLS ===

'''EAP-TLS''', defined in RFC 2716, is an [[IETF]] open standard, and is well-supported among wireless vendors.  It offers a good deal of security, since TLS is considered the successor of the SSL standard.  It uses PKI to secure communication to the [[RADIUS]] authentication server which provides excellent security however the overhead of client-side certificates can make it seem daunting to set up.

EAP-TLS is the original standard wireless LAN EAP authentication protocol. It is considered one of the most secure EAP standards available and is universally supported by all manufacturers of wireless LAN hardware and software including Microsoft.  The requirement for a client-side certificate, however unpopular it may be, is what gives EAP-TLS its authentication strength and illustrates the classic convenience vs. security trade-off.  A compromised password is not enough to break into EAP-TLS enabled systems because the hacker still needs to have the client-side certificate.  When the client-side certificates are housed in smartcards, this offers the most security available because there is no way to steal a certificate's private key from a smartcard without stealing the smartcard itself.  It is significantly more likely that physical theft of a smartcard would be immediately noticed and the smartcard revoked and a new card issued than that password theft would be noticed and the password changed or account disabled.  Up until April of 2005, EAP-TLS was the only EAP type vendors needed to certify for a WPA or WPA2 logo.  There are client and server implementations of it in Microsoft, Cisco, Apple, Linux, and open source.  EAP-TLS is natively supported in MAC OS 10.3 and above, Windows 2000 SP4, Windows XP, Windows Mobile 2003 and above, and Windows CE 4.2 as well as by many Open Source [[EAP Clients]].

=== EAP-MD5 ===

'''EAP-MD5''', defined in RFC 3748, is another IETF open standard, but offers minimal security.  The [[MD5]] [[hash function]] is vulnerable to [[dictionary attack]]s, and does not support mutual authentication or key generation, which makes it unsuitable for use with dynamic WEP,  or WPA/WPA2 enterprise.

=== EAP-TTLS ===

'''EAP-[[Tunneled Transport Layer Security]]''', or '''EAP-TTLS''', was co-developed by [[Funk Software]] and [[Certicom]].  It is widely supported across platforms, and offers very good security, using PKI certificates only on the authentication server.

EAP TTLS is also described in an IETF internet draft, "draft-funk-eap-ttls-v0-04.txt [http://www.ietf.org/internet-drafts/draft-funk-eap-ttls-v0-04.txt]". Note that this an individual submission and not standardized in the IETF.

=== EAP-IKEv2 ===

EAP-IKEv2 is an EAP authentication method based on the [[IKEv2|Internet Key Exchange Protocol version 2 (IKEv2)]]. It provides mutual authentication and session key establishment between an EAP peer and an EAP server. It supports authentication techniques that are based on the following types of credentials:

* '''Asymmetric key pairs''' - public/private key pairs where the public key is embedded into a [[digital certificate]], and the corresponding [[private key]] is known only to a single party.
* '''Passwords''' - low-[[entropy]] bit strings that are known to both the server and the peer.
* '''Symmetric keys''' - high-entropy bit strings that known to both the server and the peer.

It is possible to use a different authentication [[credential]] (and thereby technique) in each direction. For example that the EAP server authenticates itself using public/private key pair and the EAP client using symmetric key. In particular, the following combinations are expected to be used in practice:

{| class="wikitable" style="margin-left: 2em;"
! EAP server
! EAP peer
|-
| asym. key pair
| asym. key pair
|-
| asym. key pair
| symmetric key
|-
| asym. key pair
| password
|-
| symmetric key
| symmetric key
|}

EAP-IKEv2 is described in an IETF internet draft, [http://www.ietf.org/internet-drafts/draft-tschofenig-eap-ikev2-11.txt draft-tschofenig-eap-ikev2-11.txt]. Prototype implementation can be found at http://eap-ikev2.sourceforge.net page.

=== PEAP ===

'''[[Protected Extensible Authentication Protocol|PEAP]]''' is a joint proposal by [[Cisco Systems]], [[Microsoft]] and [[RSA Security]] as an open standard.  It is already widely available in products, and provides very good security.  It is similar in design to EAP-TTLS, requiring only a server-side PKI certificate to create a secure TLS tunnel to protect user authentication.

As of May of 2005, there were two PEAP sub-types certified for the updated WPA and WPA2 standard.  They are:
*PEAPv0/EAP-MSCHAPv2
*PEAPv1/EAP-GTC

==== PEAPv0/EAP-MSCHAPv2 ====

PEAPv0/EAP-MSCHAPv2 is the technical term for what people most commonly refer to as "PEAP".  Whenever the word PEAP is used, it almost always refers to this form of PEAP since most people have no idea there are so many flavors of PEAP.  Behind EAP-TLS, PEAPv0/EAP-MSCHAPv2 is the second most widely supported EAP standard in the world.  There are client and server implementations of it in Microsoft, Cisco, Apple, Linux, and open source.  PEAPv0/EAP-MSCHAPv2 is natively supported in MAC OS 10.3 and above, Windows 2000 SP4, Windows XP, Windows Mobile 2003 and above, and Windows CE 4.2.  The server side implementation of PEAPv0/EAP-MSCHAPv2, called IAS (Internet Authentication Service), is also included in Windows 2003 server.  PEAPv0/EAP-MSCHAPv2 enjoys universal support and is known as the PEAP standard.

This version of PEAP is defined through IETF Internet Draft "draft-kamath-pppext-peapv0-00 [http://www.watersprings.org/pub/id/draft-kamath-pppext-peapv0-00.txt]". Note that this is an expired draft.

==== PEAPv1/EAP-GTC ====

PEAPv1/EAP-GTC was created by Cisco as an alternative to PEAPv0/EAP-MSCHAPv2.  It allows the use of an inner authentication protocol other than Microsoft's MSCHAPv2. EAP-GTC (Generic Token Card) is defined in RFC 3748. It carries a text challenge from the authentication server, and a reply which is assumed to be generated by a [[security token]]. EAP-GTC does not protect the authentication data in any way. 

Even though Microsoft (along with RSA and Cisco) co-invented the PEAP standard, Microsoft never added support for PEAPv1 in general, which means PEAPv1/EAP-GTC has no native Windows OS support.  Since Cisco has always favored the use of its own less secure proprietary LEAP and EAP-FAST protocols over PEAP and markets them as simpler certificate-less solutions, standardized PEAP is rarely promoted by Cisco. With no interest from Microsoft to support PEAPv1 and little interest from Cisco to promote PEAP in general, PEAPv1 authentication is rarely used.  There is no native OS support for this EAP protocol.

Although there is no in-built support for PEAP-GTC in MS Windows, it is supported by the Cisco CCX extensions program.  CCX compatability is enabled by default on many vendor-provided 802.11A/B/G clients.

Note: The PEAP standard was created by Microsoft, Cisco, and RSA after EAP-TTLS had already come on the market.  Even with its late start, Microsoft’s and Cisco’s size allowed them to quickly overtake EAP-TTLS in the market.  Microsoft and Cisco parted ways when Microsoft only supported the PEAPv0 standard while Cisco supported both PEAPv0 and PEAPv1.  PEAPv0 and PEAPv1 both refer to the outer authentication method and is the mechanism that creates the secure TLS tunnel to protect subsequent authentication transactions while EAP-MSCHAPv2, EAP-GTC, and EAP-SIM refer to the inner authentication method which facilitates user or device authentication.  From Cisco’s perspective, PEAPv0 supports inner EAP methods EAP-MSCHAPv2 and EAP-SIM while PEAPv1 supports inner EAP methods EAP-GTC and EAP-SIM.  Since Microsoft only supports PEAPv0 and doesn’t support PEAPv1, Microsoft simply calls PEAPv0 PEAP without the v0 or v1 designator.  Another difference between Microsoft and Cisco is that Microsoft only supports PEAPv0/EAP-MSCHAPv2 mode but not PEAPv0/EAP-SIM mode.  However, Microsoft supports another form of PEAPv0 (which Microsoft calls PEAP-EAP-TLS) that Cisco and other third-party server and client software don’t support.  PEAP-EAP-TLS does require a client-side digital certificate located on the client’s hard drive or a more secure smartcard.  PEAP-EAP-TLS is very similar in operation to the original EAP-TLS but provides slightly more protection due to the fact that portions of the client certificate that are unencrypted in EAP-TLS are encrypted in PEAP-EAP-TLS.  Since few third-party clients and servers support PEAP-EAP-TLS, users should probably avoid it unless they only intend to use Microsoft desktop clients and servers.  Ultimately, PEAPv0/EAP-MSCHAPv2 is the only form of PEAP that most people will ever know.  PEAP is so successful in the market place that even Funk Software, the inventor and backer of EAP-TTLS, had no choice but to support PEAP in their server and client software for wireless networks.

This version of PEAP is defined through the IETF internet draft "draft-josefsson-pppext-eap-tls-eap-05 [http://www.watersprings.org/pub/id/draft-josefsson-pppext-eap-tls-eap-05.txt]."  Note that this is an expired draft.

=== EAP-FAST ===

''EAP-FAST (Flexible Authentication via Secure Tunneling)'' is a method designed by [[Cisco Systems]] to fix the weaknesses of LEAP. Use of server certificates is optional in EAP-FAST. EAP-FAST uses a Protected Access Credential (PAC). The PAC can be provisioned manually or dynamically in Phase 0 of EAP-FAST. EAP-FAST has three phases. Phase 0 is an optional phase. In Phase 1 the client and the AAA server uses the PAC to establish TLS tunnel. In Phase 2, the client sends user information across the tunnel.

Although Cisco advertises EAP-FAST as being much more secure than LEAP, it can still suffer from a poor implementation.  EAP-MD5 & LEAP suffered from a weak user password, EAP-FAST can give up usernames and passwords in situations where Automatic PAC provisioning is enabled on the RADIUS server and the Wireless Client.

EAP-FAST is defined in IETF RFC 4851. Note that this is an Informational RFC.

===EAP-SIM===

'''[[EAP-SIM|EAP for GSM Subscriber Identity]]''' is used for authentication and session key distribution using the Global System for Mobile Communications ([[GSM]]) Subscriber Identity Module ([[SIM]])  EAP SIM is defined in RFC 4186.

===EAP-AKA===

'''[[EAP-AKA|EAP for UMTS Authentication and Key Agreement]]''' is used for authentication and session key distribution using the Universal Mobile Telecommunications System ([[UMTS]]) UMTS Subscriber Identity Module ([[USIM]]).  EAP AKA is defined in RFC 4187.

==See also==

* [[EAP Clients]]
*[[Point-to-Point_Protocol|PPP]]
*[[RADIUS]]
*[[DIAMETER]]
* [[HOWTO]]
* [http://www.ietf.org/rfc/rfc3748.txt RFC3748: Extensible Authentication Protocol (EAP) (June 2004)]
* [http://blogs.zdnet.com/Ou/index.php?p=67 "Understanding the updated WPA and WPA2 standards" (2005-06-02)]
* [http://www.lanarchitect.net/Articles/Wireless/LEAP "LEAP: A looming disaster in Enterprise Wireless LANs" (2004-07-06)]
