The '''rlm_passwd''' module enables local authentication based on the /etc/passwd and similar files.

{{Default in the server source|src/modules/rlm_passwd/}}

==Configuration==

{{Default in the server source|raddb/modules/passwd}}

<pre>
	# passwd module allows to do authorization via any passwd-like
	# file and to extract any attributes from these modules
	#
	# parameters are:
	#   filename - path to filename
	#   format - format for filename record. This parameters
	#            correlates record in the passwd file and RADIUS
	#            attributes.
	#
	#            Field marked as '*' is key field. That is, the parameter
	#            with this name from the request is used to search for
	#            the record from passwd file
	#            Attribute marked as '=' is added to reply_itmes instead
	#            of default configure_itmes
	#	     Attribute marked as '~' is added to request_items
	#
	#            Field marked as ',' may contain a comma separated list
	#            of attributes.
	#   hashsize - hashtable size. If 0 or not specified records are not
	#            stored in memory and file is red on every request.
	#   allowmultiplekeys - if few records for every key are allowed
	#   ignorenislike - ignore NIS-related records
	#   delimiter - symbol to use as a field separator in passwd file,
	#            for format ':' symbol is always used. '\0', '\n' are
        #	     not allowed 
	#

	#  An example configuration for using /etc/smbpasswd.
	#
	#passwd etc_smbpasswd {
	#	filename = /etc/smbpasswd
	#	format = "*User-Name::LM-Password:NT-Password:SMB-Account-CTRL-TEXT::"
	#	hashsize = 100
	#	ignorenislike = no
	#	allowmultiplekeys = no
	#}

	#  Similar configuration, for the /etc/group file. Adds a Group-Name
	#  attribute for every group that the user is member of.
	#
	#passwd etc_group {
	#	filename = /etc/group
	#	format = "=Group-Name:::*,User-Name"
	#	hashsize = 50
	#	ignorenislike = yes
	#	allowmultiplekeys = yes
	#	delimiter = ":"
	#}
</pre>